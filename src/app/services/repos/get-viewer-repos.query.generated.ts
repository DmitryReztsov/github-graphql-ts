/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../types.generated';

import.meta.webpackHot?.accept();
import { api } from '../baseApi';
export type GetViewerReposQueryVariables = Types.Exact<{
  cursor: Types.Scalars['String']['input'];
  limit: Types.Scalars['Int']['input'];
}>;


export type GetViewerReposQuery = { __typename?: 'Query', viewer: { __typename?: 'User', repositories: { __typename?: 'RepositoryConnection', totalCount: number, edges?: Array<{ __typename?: 'RepositoryEdge', cursor: string, node?: { __typename?: 'Repository', id: string, name: string, url: any, stargazerCount: number, owner: { __typename?: 'Organization', login: string } | { __typename?: 'User', login: string }, defaultBranchRef?: { __typename?: 'Ref', target?: { __typename?: 'Blob' } | { __typename?: 'Commit', id: string, committedDate: any } | { __typename?: 'Tag' } | { __typename?: 'Tree' } } } }> } } };


export const GetViewerReposDocument = `
    query getViewerRepos($cursor: String!, $limit: Int!) {
  viewer {
    repositories(first: $limit, after: $cursor) {
      edges {
        node {
          id
          name
          url
          stargazerCount
          owner {
            login
          }
          defaultBranchRef {
            target {
              ... on Commit {
                id
                committedDate
              }
            }
          }
        }
        cursor
      }
      totalCount
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: import.meta.webpackHot?.status() === "apply",
  endpoints: (build) => ({
    getViewerRepos: build.query<GetViewerReposQuery, GetViewerReposQueryVariables>({
      query: (variables) => ({ document: GetViewerReposDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useGetViewerReposQuery, useLazyGetViewerReposQuery } = injectedRtkApi;

